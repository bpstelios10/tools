apiVersion: v1
kind: Service
metadata:
  name: shared-grafana
  labels:
    app: shared-grafana
spec:
  type: NodePort
  selector:
    app: shared-grafana
  ports:
    - port: 3000
      name: client
      nodePort: 30008
  sessionAffinity: None
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shared-grafana
  labels:
    app: shared-grafana
spec:
  replicas: {{ .Values.replicasCount }}
  selector:
    matchLabels:
      app: shared-grafana
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: shared-grafana
    spec:
      terminationGracePeriodSeconds: 300
      containers:
      - name: shared-grafana
        image: {{ .Values.image.repository }}
        resources:
          requests:
            memory: "1Gi"
            cpu: 0
          limits:
            memory: "1Gi"
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
      volumes:
      - name: grafana-storage
        persistentVolumeClaim:
          claimName: grafana-storage
      securityContext:
        runAsUser: 0
